.panel.panel-default
  .panel-heading
    .row
      .col-md-3
        %h6.panel-title
          Najpopularniejsze prezentacje
      .col-md-9
        - if @report
          = form_tag({}, { method: :get, class: "form-inline" }) do
            .rwc-FilterParams
              .rwc-FilterParams-group
                = select_tag :indicator, options_for_select(@indicators, @selected_indicator), class: "form-control"

              .rwc-FilterParams-group
                = label_tag :start_on, "Od", class: "rwc-FilterParams-control"
                = text_field_tag :start_on, @date_range.start_on, class: "form-control datepicker rwc-FilterParams-control", data: { provide: "datepicker" }

              .rwc-FilterParams-group
                = label_tag :end_on, "Do", class: "rwc-FilterParams-control"
                = text_field_tag :end_on, @date_range.end_on, class: "form-control datepicker rwc-FilterParams-control", data: { provide: "datepicker" }

              .rwc-FilterParams-group
                .checkbox
                  %label(for="as_chart")
                    = check_box_tag :as_chart, "1", @as_chart
                    Wykres

              - if @team.size > 1
                .rwc-FilterParams-group
                  = select_tag :ua_id, options_for_select(@team.map {|a| [("- " * (a.relative_level - 1)) + " #{a.node_name}", a.id]}, @selected_ua.id),
                      class: "form-control"

  - if @report
    - if @as_chart
      .panel-body
        %canvas.rwc-RepoReportTotalChart

    - else
      .table-responsive
        %table.table.table-xxs.table-bordered.table-striped.table-hover
          %tr
            %th Prezentacja
            - @report.first[:days].each do |d|
              %th
                = l d[:day], format: :month_day
          - @report.each do |r|
            %tr
              %td= r[:item].base_name
              - r[:days].each do |d|
                %td.number
                  = repo_pres_indicator(@selected_indicator, d)
  - else
    .panel-body
      %h4 Brak prezentacji

:javascript
  $(function() {
    $("#indicator, #ua_id, #as_chart").change(function() {
      $(this.form).submit();
    });

    $('.datepicker').datepicker().on('hide', function (ev) {
      $(this.form).submit();
    });
  });

- if @as_chart
  = javascript_include_tag "Chart.bundle.min"
  :javascript
    $(function() {
      var getRandomColor = function() {
        var letters = '0123456789ABCDEF'.split('');
        var color = '#';
        for (var i = 0; i < 6; i++ ) { color += letters[Math.floor(Math.random() * 16)]; }
        return color;
      };

      var ctx = document.getElementsByClassName("rwc-RepoReportTotalChart");
      var myChart = new Chart(ctx, {
        type: 'line',
        data: {
          labels: [#{ @report.first[:days].map {|d| "'#{ l(d[:day], format: :month_day) }'" }.join(',') }],
          datasets: [
            #{ @report.map {|r| "{ fill: false, label: '#{r[:item].base_name}', borderColor: getRandomColor(),
                  data: [#{ r[:days].map {|d| repo_pres_indicator(@selected_indicator, d, true) }.join(",") }] }" }.join(",") }
          ]
        },
        options: {
          scales: {
            xAxes: [{}],
            yAxes: [{
              ticks: {
                beginAtZero: true
              }
            }]
          }
        }
      });
    });
